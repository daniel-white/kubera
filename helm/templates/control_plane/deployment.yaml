apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "controlPlane.name" . }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.controlPlane.deployment.replicas | default 2 }}
  {{- if .Values.controlPlane.deployment.strategy }}
  strategy:
    {{- toYaml .Values.controlPlane.deployment.strategy | nindent 4 -}}
  {{- end }}
  selector:
    matchLabels:
      app: {{ include "controlPlane.name" . }}
  template:
    metadata:
      {{- if .Values.podAnnotations }}
      annotations: {{ toYaml .Values.podAnnotations | nindent 8 }}
      {{- end }}
      labels: {{ (include "labels" .) | nindent 8 }}
        app: {{ include "controlPlane.name" . }}
    spec:
      serviceAccountName: {{ include "controlPlane.name" . }}
      containers:
        - name: control-plane
          image: {{ .Values.controlPlane.deployment.image.repository | default .Values.deployments.image.repository | default "vale-gateway" }}:{{ .Values.controlPlane.deployment.image.tag | default .Values.deployments.image.tag | default "latest" }}
          imagePullPolicy: {{ default .Values.controlPlane.deployment.imagePullPolicy .Values.deployments.imagePullPolicy "IfNotPresent" }}
          command:
            - /usr/local/bin/vg-control-plane
          env:
            - name: RUST_LOG
              value: {{ (default .Values.controlPlane.logLevel .Values.logLevel "Warn") | lower }}
            - name: VALE_GATEWAY_INSTANCE
              value: {{ include "controlPlane.name" . }}
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_UID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.uid
            - name: PORT
              value: "8080"
            - name: OTEL_SERVICE_NAME
              value: {{ include "controlPlane.name" . }}
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: >
                service.name={{ include "controlPlane.name" . }},
                service.namespace={{ .Release.Namespace }},
                service.instance.id=$(POD_UID),
                k8s.pod.name=$(POD_NAME),
                k8s.namespace.name={{ .Release.Namespace }},
                k8s.pod.uid=$(POD_UID),
                k8s.cluster.name={{ .Values.clusterName }},
                k8s.deployment.name={{ include "controlPlane.name" . }},
            - name: OTEL_COLLECTOR_NAME
              value: {{ default .Values.controlPlane.instrumentation.openTelemetry.collector.name .Values.instrumentation.openTelemetry.collector.name }}
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: {{ default .Values.controlPlane.instrumentation.openTelemetry.exporter.endpoint .Values.instrumentation.openTelemetry.exporter.endpoint "http://$(OTEL_COLLECTOR_NAME):4318" }}
            - name: OTEL_TRACES_SAMPLER
              value: >-
                {{- /* Priority: controlPlane > global instrumentation > default always_off */ -}}
                {{- $samplerType := (or .Values.controlPlane.instrumentation.openTelemetry.tracing.sampling.type .Values.instrumentation.openTelemetry.tracing.sampling.type) }}
                {{- if eq $samplerType "AlwaysOn" }}
                always_on
                {{- else if eq $samplerType "AlwaysOff" }}
                always_off
                {{- else if eq $samplerType "TraceIdRatioBased" }}
                traceidratio
                {{- else if eq $samplerType "ParentBased" }}
                  {{- with .Values.controlPlane.instrumentation.openTelemetry.tracing.sampling.parentBased }}
                    {{- if .type }}
                      {{- if eq .type "AlwaysOn" }}
                        parentbased_always_on
                      {{- else if eq .type "AlwaysOff" }}
                        parentbased_always_off
                      {{- else if eq .type "TraceIdRatioBased" }}
                        parentbased_traceidratio
                      {{- else }}
                        parentbased_always_off
                      {{- end }}
                    {{- else }}
                      parentbased_always_off
                    {{- end }}
                  {{- else }}
                    parentbased_always_off
                  {{- end }}
                {{- else }}
                always_off
                {{- end }}
            - name: OTEL_TRACES_SAMPLER_ARG
              value: >-
                {{- /* Only set for traceidratio and parentbased_traceidratio */ -}}
                {{- $samplerType := (or .Values.controlPlane.instrumentation.openTelemetry.tracing.sampling.type .Values.instrumentation.openTelemetry.tracing.sampling.type) }}
                {{- if eq $samplerType "TraceIdRatioBased" }}
                  {{- with .Values.controlPlane.instrumentation.openTelemetry.tracing.sampling.traceIdRatioBased }}
                    {{ .ratio | default "0.0" }}
                  {{- else }}
                0.0
                  {{- end }}
                {{- else if eq $samplerType "ParentBased" }}
                  {{- with .Values.controlPlane.instrumentation.openTelemetry.tracing.sampling.parentBased }}
                    {{- if eq .type "TraceIdRatioBased" }}
                      {{- with .traceIdRatioBased }}
                        {{ .ratio | default "0.0" }}
                      {{- else }}
                    0.0
                      {{- end }}
                    {{- else }}
                  0.0
                    {{- end }}
                  {{- else }}
                0.0
                  {{- end }}
                {{- else }}
                0.0
                {{- end }}
          resources: {{ toYaml .Values.controlPlane.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              port: http
              path: /healthz/liveness
          readinessProbe:
            httpGet:
              port: http
              path: /healthz/readiness
          ports:
            - containerPort: 8080
              name: http
